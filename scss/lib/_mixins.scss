
//------------------------------------
//	$MIXINS
//------------------------------------



//  Breakpoints and media queries:
//
//  Usage:
//------------------------------------
//
//  @include breakpoint($breakpoint, $query1) {
//   /* Styles */
//  }
//
//  $breakpoint: select the device type: phone, tablet, laptop, desktop. Sizes are defined in _variables.scss
//  $query1: select min or max width
//
//
//  Example;
// ------------------------------------
//
//  .hello {
//    color: red;
//      @include breakpoint(desktop, min) {
//      color:blue;
//    }
//  }
//
//
//  Returns:
// ------------------------------------
//
//  .hello { color: red; }
//  @media (min-width: 1200px) { .hello { color:blue; } }
//
//  Enjoy!


@mixin breakpoint($breakpoint, $query1: min) {

  @if $breakpoint == desktop {
     @media (#{$query1}-width: $screen-lg-min) { @content; }
  }
   @else if $breakpoint == laptop {
     @media (#{$query1}-width: $screen-md-min) { @content; }
  }
    @else if $breakpoint == tablet {
     @media (#{$query1}-width: $screen-sm-min) { @content; }
  }
   @else if $breakpoint == phone {
     @media (#{$query1}-width: $screen-xs-min) { @content; }
  }
}

// Responsive visibility
// More easily include all the states for Responsive visibility helpers.
// [converter] $parent hack

@mixin responsive-visibility($parent) {
  #{$parent} {
    display: block !important;
  }
  table#{$parent}  { display: table; }
  tr#{$parent}     { display: table-row !important; }
  th#{$parent},
  td#{$parent}     { display: table-cell !important; }
}

// [converter] $parent hack
@mixin responsive-invisibility($parent) {
  #{$parent} {
    display: none !important;
  }
}


// Clearfix
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
//
// Source: http://nicolasgallagher.com/micro-clearfix-hack/

@mixin clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

// ellipsis
@mixin ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// gradients
@mixin horizontal($startColor : $white, $endColor : $lightergrey) {
	background-color: $endColor;
	background-image  : -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image  : -webkit-linear-gradient(left, $startColor, $endColor);                   // Safari 5.1+, Chrome 10+
	background-image  : -moz-linear-gradient(left, $startColor, $endColor);                      // FF 3.6+
	background-image  : -ms-linear-gradient(left, $startColor, $endColor);                       // IE10
	background-image  : -o-linear-gradient(left, $startColor, $endColor);                        // Opera 11.10
	background-image  : linear-gradient(left, $startColor, $endColor);                           // W3C
	background-repeat : repeat-x;
}

@mixin vertical($startColor : $white, $endColor:  $lightergrey) {
	background-image  : -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
	background-image  : -webkit-linear-gradient(top, $startColor, $endColor);                    // Safari 5.1+, Chrome 10+
	background-color  : $endColor;
	background-image  : -moz-linear-gradient(top, $startColor, $endColor);                       // FF 3.6+
	background-image  : -ms-linear-gradient(top, $startColor, $endColor);                        // IE10
	background-image  : -o-linear-gradient(top, $startColor, $endColor);                         // Opera 11.10
	background-image  : linear-gradient(top, $startColor, $endColor);                            // W3C
	background-repeat : repeat-x;
}

@mixin directional($startColor : $white, $endColor : $lightergrey, $deg : 45deg) {
	background-color  : $endColor;
	background-image  : -moz-linear-gradient($deg, $startColor, $endColor);                     // FF 3.6+
	background-image  : -ms-linear-gradient($deg, $startColor, $endColor);                      // IE10
	background-image  : -webkit-linear-gradient($deg, $startColor, $endColor);                  // Safari 5.1+, Chrome 10+
	background-image  : -o-linear-gradient($deg, $startColor, $endColor);                       // Opera 11.10
	background-image  : linear-gradient($deg, $startColor, $endColor);                          // W3C
	background-repeat : repeat-x;
}

// .bordered(COLOR, COLOR, COLOR, COLOR);
@mixin bordered($top-color: #eee, $right-color: #eee, $bottom-color: #eee, $left-color: #eee) {
	border-top : solid 1px $top-color;
	border-left : solid 1px $left-color;
	border-right : solid 1px $right-color;
	border-bottom : solid 1px $bottom-color;
}

// .border-radius(VALUE,VALUE,VALUE,VALUE);
@mixin border-radius($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
	-webkit-border-top-right-radius : $topright;
	-webkit-border-bottom-right-radius : $bottomright;
	-webkit-border-bottom-left-radius : $bottomleft;
	-webkit-border-top-left-radius : $topleft;
	-moz-border-radius-topright : $topright;
	-moz-border-radius-bottomright : $bottomright;
	-moz-border-radius-bottomleft : $bottomleft;
	-moz-border-radius-topleft : $topleft;
	border-top-right-radius : $topright;
	border-bottom-right-radius : $bottomright;
	border-bottom-left-radius : $bottomleft;
	border-top-left-radius : $topleft;
	-webkit-background-clip : padding-box;
	-moz-background-clip : padding;
	background-clip : padding-box;
}

// .box-shadow(HORIZONTAL VERTICAL BLUR COLOR))
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
	-webkit-box-shadow : $shadow;
	box-shadow : $shadow;
}

// .drop-shadow(HORIZONTAL, VERTICAL, BLUR, ALPHA);
@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0.1) {
	-webkit-box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
	-moz-box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
	box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
}

// .opacity(VALUE);
@mixin opacity($opacity : .5) {
	-webkit-opacity : $opacity;
	-moz-opacity : $opacity;
	opacity : $opacity;
}

// .rotate(VALUEdeg);
@mixin rotate($deg) {
	-webkit-transform : rotate($deg);
	-moz-transform : rotate($deg);
	-ms-transform : rotate($deg);
	-o-transform : rotate($deg);
	transform : rotate($deg);
}

// .scale(VALUE);
@mixin scale($ratio) {
	-webkit-transform : scale($ratio);
	-moz-transform : scale($ratio);
	-ms-transform : scale($ratio);
	-o-transform : scale($ratio);
	transform : scale($ratio);
}

// .skew(VALUE, VALUE);
@mixin skew($x: 0, $y: 0) {
	-webkit-transform : skew($x, $y);
	-moz-transform : skew($x, $y);
	-ms-transform : skew($x, $y);
	-o-transform : skew($x, $y);
	transform : skew($x, $y);
}

// .transition(PROPERTY DURATION DELAY(OPTIONAL) TIMING-FINCTION);
@mixin transition($transition) {
	-webkit-transition : $transition;
	-moz-transition : $transition;
	-ms-transition : $transition;
	-o-transition : $transition;
	transition : $transition;
}

// .translate(VALUE, VALUE)
@mixin translate($x: 0, $y: 0) {
	-webkit-transform : translate($x, $y);
	-moz-transform : translate($x, $y);
	-ms-transform : translate($x, $y);
	-o-transform : translate($x, $y);
	transform : translate($x, $y);
}

@mixin translate3d($x: 0, $y: 0, $z: 0) {
	-webkit-transform : translate($x, $y, $z);
	-moz-transform : translate($x, $y, $z);
	-ms-transform : translate($x, $y, $z);
	-o-transform : translate($x, $y, $z);
	transform : translate($x, $y, $z);
}

// .background-alpha(VALUE VALUE);
@mixin background-alpha($color: $white, $alpha: 1) {
	background-color : hsla(hue($color), saturation($color), lightness($color), $alpha);
}

// .background-size(VALUE VALUE);
@mixin background-size($size){
	-webkit-background-size : $size;
	-moz-background-size : $size;
	-o-background-size : $size;
	background-size : $size;
}

// .background-clip(VALUE); (border-box, padding-box, content-box)
@mixin background-clip($clip) {
	-webkit-background-clip : $clip;
	-moz-background-clip : $clip;
	background-clip : $clip;
}

// .box-sizing(VALUE); (border-box, padding-box, content-box)
@mixin box-sizing($boxsize: border-box) {
	-webkit-box-sizing : $boxsize;
	-moz-box-sizing : $boxsize;
	-ms-box-sizing : $boxsize;
	box-sizing : $boxsize;
}

// .resize(VALUE) (none, both, horizontal, vertical, inherit)

@mixin resize($direction: both) {
	resize : $direction;
	overflow : auto;
}

// .userselect(VALUE) (all, element, none, text)

@mixin user-select($select) {
	-webkit-user-select : $select;
	-moz-user-select : $select;
	-o-user-select : $select;
	user-select : $select;
}

//  Vendor prefixes for the people
//
//   `@include vendor(border-radius, 4px);`
//
//
@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}

